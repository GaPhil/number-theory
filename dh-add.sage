# The Diffie-Hellman key exchange can be broken trivially in (Z/nZ; +)!
print("The Diffie-Hellman key exchange can be broken trivially in (Z/nZ; +)!")

n = 2^1024
print("n = 2^1024\n")

# Find a generator 1 < g \in (Z/nZ; +)
# Change range to use other generator
for g in range(2, n):
    if gcd(g, n) == 1:
        print("The publicly known generator is:\ng =", g, "\n")
        break

x_a = ZZ.random_element(0, n - 1)
print("Alice chooses x_a from {0,...,n-1}:\nx_a =", x_a, "\n")

A = g * x_a % n
print("Alice sends A = R_n(g * x_a):\nA =", A, "\n")

x_b = ZZ.random_element(0, n - 1)
print("Bob chooses x_b from {0,...,n-1}:\nx_b =", x_b, "\n")

B = g * x_b % n
print("Bob sends B = R_n(g * x_b):\nB =", B, "\n")

print("The shared key k_AB = R_n(g * x_a * x_b):\nk_AB =", g * x_a * x_b % n, "\n")

a = inverse_mod(g, n)
print("g is a generator of (Z/nZ; +) ===> gcd(g, n) = 1")
print("Eve can use the extended euclidean algorithm to find an\na \\in Z : a * g \\cong 1 mod n:\na =", a, "\n")

print("Even can compute the key k using the eavesdropped message A and B.")
print("k_Eve = R_n(a * A * B)\nk_Eve =", a * A * B % n, "\n")

print("Claim:     k_AB\t= R_n(a * A * B)\n")
print("Proof:     k_AB\t= R_n(g * x_A * x_b)\n\t\t= R_n(g * x_a * (a*g) * x_B)\n\t\t= R_n(a * (g*x_a) * (g*x_b))\n\t\t= R_n(a * A * B)\n\t\t= k_Eve")
print("k_AB == k_Eve:", g * x_a * x_b % n == a * A * B % n)



##### An execution of the program:
###
###   The Diffie-Hellman key exchange can be broken trivially in (Z/nZ; +)!
###   n = 2^1024
###   
###   The publicly known generator is:
###   g = 3
###   
###   Alice chooses x_a from {0,...,n-1}:
###   x_a = 58071172491632452629611077451490994604593994088671370310316003952808404763542804839124493944261057530703018369993510671503946590448325806946776253848926996532312209938999660906237210913030512885845470272332579512005216916006051974639079823547867051543229743150107678362755673502716609537854558266925469969389 
###   
###   Alice sends A = R_n(g * x_a):
###   A = 174213517474897357888833232354472983813781982266014110930948011858425214290628414517373481832783172592109055109980532014511839771344977420840328761546780989596936629816998982718711632739091538657536410816997738536015650748018155923917239470643601154629689229450323035088267020508149828613563674800776409908167 
###   
###   Bob chooses x_b from {0,...,n-1}:
###   x_b = 30380954046990784444555994694053584283458142164361345774175713351951143024629420265847627644825181276123358129627888853562202620174386907862474306551673476878867895941814964812550226982948967204511488983216103662053790460521459877890619395457692681386886747773662656587155413038077725203923176510170844836640 
###   
###   Bob sends B = R_n(g * x_b):
###   B = 91142862140972353333667984082160752850374426493084037322527140055853429073888260797542882934475543828370074388883666560686607860523160723587422919655020430636603687825444894437650680948846901613534466949648310986161371381564379633671858186373078044160660243320987969761466239114233175611769529530512534509920 
###   
###   The shared key k_AB = R_n(g * x_a * x_b):
###   k_AB = 33860135344573502778200291074194195720181395037104523114763230247493272234987704118618346169165694978620580317675905089314505969116335554783527318435083035079429744596085139135797376967212772335184701897439330814011112876073031675940778476214675574589375898322335458541263024085786397942327375160788687396320 
###   
###   g is a generator of (Z/nZ; +) ===> gcd(g, n) = 1
###   Eve can use the extended euclidean algorithm to find an
###   a \in Z : a * g \cong 1 mod n:
###   a = 119846208990821060515287012719268315574531798596153771515620054105155117203667308755138984881605024014080075919914262238439193179209611081661898287092982749585178595616576990184201479734164062746302055301390003845892100454894975254315942073693884824775567007123057532159964830625653144203223570886416149424811 
###   
###   Even can compute the key k using the eavesdropped message A and B.
###   k_Eve = R_n(a * A * B)
###   k_Eve = 33860135344573502778200291074194195720181395037104523114763230247493272234987704118618346169165694978620580317675905089314505969116335554783527318435083035079429744596085139135797376967212772335184701897439330814011112876073031675940778476214675574589375898322335458541263024085786397942327375160788687396320 
###   
###   Claim:     k_AB = R_n(a * A * B)
###   
###   Proof:     k_AB = R_n(g * x_A * x_b)
###           = R_n(g * x_a * (a*g) * x_B)
###           = R_n(a * (g*x_a) * (g*x_b))
###           = R_n(a * A * B)
###           = k_Eve
###   k_AB == k_Eve: True
